syntax = "proto3";

package network_comms;

import "basic.proto";

service client_protocols {
    rpc system_checkup(SystemInfoRequest) returns (SystemInfoResponse);
    rpc create_file(CreateFileRequest) returns (CreateFileResponse);
    rpc update_file(UpdateFileRequest) returns (UpdateFileResponse);
    rpc delete_file(DeleteFileRequest) returns (DeleteFileResponse);
    rpc read_file(ReadFileRequest) returns (ReadFileResponse);
}

// request for node statuses
message SystemInfoRequest {
    required ClientInfo client = 1;
}

message CreateFileRequest {
    required ClientInfo client = 1;
    required FileInfo file_info = 2;
    
}

message UpdateFileRequest {
    required ClientInfo client = 1;
    required FileInfo file_info = 2;
}

message DeleteFileRequest {
    required ClientInfo client = 1;
    required FileInfo file_info = 2;
}

message ReadFileRequest {
    required ClientInfo client = 1;
    required FileInfo file_info = 2;
}

message SystemInfoResponse {
    required NodeInfo client = 1;
}

message CreateFileResponse {
    required GenericReply response = 1;

}

message UpdateFileResponse {
    required GenericReply response = 1;
}

message DeleteFileResponse {
    required GenericReply response = 1;
}

message ReadFileResponse {
    required bytes file_content = 1;
    // add other file-related information
}




// for read/write requests for blocks on datanodes?
message BlockWriteRequest {
    required ClientInfo client = 1;
    required BlockInfo block_info = 2;
    required bytes block_data = 3;
}

message BlockWriteResponse {
    required bool success = 1;
}

message BlockReadRequest {
    required ClientInfo client = 1;
    required BlockInfo block_info = 2;
}

message BlockReadResponse {
    required bytes block_data = 1;
}
